basePath: /api/v1
definitions:
  model.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 5
        type: string
    required:
    - email
    - password
    type: object
  model.MissionRequest:
    properties:
      condition: {}
      name:
        type: string
      point:
        type: integer
      type:
        type: string
    required:
    - condition
    - name
    - point
    - type
    type: object
  model.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      phone_number:
        maxLength: 15
        type: string
      retype_password:
        type: string
    required:
    - email
    - password
    - phone_number
    - retype_password
    type: object
host: localhost:5001
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Finpay Realtime Transaction API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Finpay Realtime Transaction API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: Login
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses: {}
      summary: Login
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register new user
      parameters:
      - description: Register
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RegisterRequest'
      produces:
      - application/json
      responses: {}
      summary: Register
      tags:
      - Auth
  /mission/all:
    get:
      consumes:
      - application/json
      description: Get All User Mission
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get All User Mission
      tags:
      - Mission
  /mission/create:
    post:
      consumes:
      - application/json
      description: Create User Mission
      parameters:
      - description: Mission
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.MissionRequest'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Create User Mission
      tags:
      - Mission
  /user/detail:
    get:
      consumes:
      - application/json
      description: Get User Detail
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Get User Detail
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
